---
- name: Create user sysops
  hosts: all  # This will run on all managed hosts

  become: true

  tasks:
    - name: Create sysops user
      user:
        name: sysops
        home: /home/sysops
        create_home: yes
        shell: /bin/bash  # Optional, define the default shell
      # You can add additional options here like password, groups, etc.

    - name: Ensure sysops home directory exists
      file:
        name: /home/sysops
        state: directory
        mode: 0750  # Adjust permissions as needed
        owner: sysops
        group: sysops


    - name: Set ownership and permissions on sysops home (Debian specific)
      file:
        name: /home/sysops
        state: directory
        mode: 0750  # Adjust permissions as needed
        owner: sysops
        group: sysops


    - name: Grant sudo access for sysops user with specific commands (optional)
      lineinfile:
        path: /etc/sudoers.d/sysops_sudoers
        create: yes
        mode: 0440
        line: "sysops ALL=(ALL) NOPASSWD: ALL"
        validate: '/usr/sbin/visudo -cf %s'



---
- name: Generate SSH keys for sysops user
  hosts: all
  become: true

  tasks:
    - name: Check if sysops user's SSH directory exists
      stat:
        path: /home/sysops/.ssh
      register: ssh_dir_stat

    - name: Create SSH directory for sysops user if it doesn't exist
      file:
        name: /home/sysops/.ssh
        state: directory
        mode: 0700
      when: not ssh_dir_stat.stat.exists

    - name: Generate SSH key pair for sysops user
      become_user: sysops
      authorized_key:
        user: sysops
        key: "{{ lookup('file', '/home/sysops/.ssh/id_rsa.pub') }}"
        state: present
      when: not ssh_dir_stat.stat.exists

    - name: Set permissions on SSH directory and key files
      file:
        path: "{{ item.path }}"
        mode: "{{ item.mode }}"
      with_items:
        - path: /home/sysops/.ssh
          mode: 0700
        - path: /home/sysops/.ssh/id_rsa
          mode: 0600
        - path: /home/sysops/.ssh/id_rsa.pub
          mode: 0644



---
- name: Copy Jenkins user public key to sysops user on target server
  hosts: target_server  # Replace with the server hostname or group
  become: true

  tasks:
    - name: Get Jenkins user public key
      vars:
        jenkins_public_key: "{{ lookup('file', '/home/jenkins/.ssh/id_rsa.pub') }}"
      delegate_facts: false
      register: jenkins_key

    - name: Add Jenkins user public key to sysops user authorized_keys
      authorized_key:
        user: sysops  # Username on the target server
        key: "{{ jenkins_key.stdout }}"
        state: present  # Add or update the key
      when: jenkins_key.stdout is defined

