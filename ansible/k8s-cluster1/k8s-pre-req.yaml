- name: Disable Swap since kubernetes cannot work with SWAP enabled
  shell: |
    swapoff -a

- name: Disable SWAP in fstab so that it is not enabled at reboot
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'

# SElinux not present on Ubuntu
#- name: Disable SELinux
 # selinux:
  #  state: disabled

#- name: SELinux Disabled in Config
 # lineinfile:
  #  path: /etc/selinux/config
   # regexp: '^SELINUX='
    #line: SELINUX=disabled

#- name: Create modules-load.d directory and file
 # file:
  #  path: /etc/modules-load.d/containerd.conf
   # state: touch

#- name: Add Conf for containerd
 # blockinfile:
  #  path: "/etc/modules-load.d/containerd.conf"
   # block: |
    #  overlay
     # br_netfilter
      

- name: Modprobe
  shell: |
    modprobe br_netfilter
    modprobe overlay

- name: Create sysctl.d directory and file
  file:
    path: /etc/sysctl.d/k8s.conf
    state: touch

- name: Add Conf for containerd
  blockinfile:
    path: "/etc/sysctl.d/k8s.conf"
    block: |
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-ip6tables = 1

- name: Echo 1 to IPv4
  shell: |
    echo 1 > /proc/sys/net/ipv4/ip_forward

- name: Apply new settings
  shell: |
    sysctl --system

#- name: Containerd default
 # #shell: |
    #containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1


#- name: Set SystemdCgroup to true
 # replace:
  #  path: /etc/containerd/config.toml
   # regexp: 'SystemdCgroup = false'
    #replace: 'SystemdCgroup = true'

#- name: Enable and start Containerd
 # service:
  #  name: "containerd"
   # state: restarted
    #enabled: yes


- name: Download Cri-docker bundle to Machine
  get_url:
    url: https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.13/cri-dockerd-0.3.13.amd64.tgz
    dest: "/tmp/cri-dockerd-0.3.13.amd64.tgz"

- name: Unarchive bundle
  unarchive:
    src: "/tmp/cri-dockerd-0.3.13.amd64.tgz"
    dest: "/tmp"
    remote_src: yes
    #extra_opts:
    #- "--strip-components=1"

- name: Copy cri-docker to /usr/local/bin with right user and permissions
  copy:
    src: "/tmp/cri-dockerd"
    dest: "/usr/local/bin/cri-dockerd"
    mode: "0755"
    remote_src: yes

- name: Remove Cric-dockerd from /tmp
  file:
    path: "/tmp/cri-dockerd-0.3.13.amd64.tgz"
    state: absent

- name: Remove Cric-dockerd from /tmp
  file:
    path: "/tmp/cri-dockerd"
    state: absent

- name: Download Cri-docker bundle to Machine
  get_url:
    url: "https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/{{item}}"
    dest: "/tmp/{{item}}"
  loop:
  - cri-docker.service
  - cri-docker.socket

- name: Copy Cri-docker service and socket files to /etc/systemd/system/
  copy:
    src: "/tmp/{{item}}"
    dest: "/etc/systemd/system/{{item}}"
    owner: root
    group: root
    mode: 0600
    remote_src: yes
  loop:
  - cri-docker.socket
  - cri-docker.service

- name: replace path in cri-dockerd service
  replace:
    path: /etc/systemd/system/cri-docker.service
    regexp: '/usr/bin/cri-dockerd'
    replace: '/usr/local/bin/cri-dockerd'

- name: Reload Systemd
  shell: systemctl daemon-reload

- name: Enable and start cri-dockerd
  service:
    name: "{{item}}"
    state: started
    enabled: yes
  loop:
  - cri-docker.service
  - cri-docker.socket

